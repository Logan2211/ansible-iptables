language: python
# Test this later.
cache:
  timeout: 3600
  pip: true
  directories:
    - $HOME/.docker
# cache: pip
services:
  - docker

_ubuntu_build: &ubuntu_build
  docker_image_tag: ubuntu-xenial
  CACHE_NAME: xenial
  TOXENV: functional_stable

_centos_build: &centos_build
  docker_image_tag: centos-7
  CACHE_NAME: cent7
  TOXENV: functional_stable

_debian_build: &debian_build
  docker_image_tag: debian-stretch
  CACHE_NAME: debian9
  TOXENV: functional_stable

env:
  global:
    - ANSIBLE_FORCE_COLOR=1
    - docker_image=quay.io/loganv/docker-ci
    - docker_command=/lib/systemd/systemd
    - cache_dir=$HOME/.docker

matrix:
  fast_finish: true
  include:
    - env:
        TOXENV: linters
        CACHE_NAME: linters
    # ANSIBLE 2.3
    - env:
        <<: *ubuntu_build
        TOXENV: functional_2.3
    - env:
        <<: *centos_build
        TOXENV: functional_2.3
    - env:
        <<: *debian_build
        TOXENV: functional_2.3
    # ANSIBLE 2.4
    - env:
        <<: *ubuntu_build
        TOXENV: functional_2.4
    - env:
        <<: *centos_build
        TOXENV: functional_2.4
    - env:
        <<: *debian_build
        TOXENV: functional_2.4
    # ANSIBLE 2.5
    - env:
        <<: *ubuntu_build
        TOXENV: functional_2.5
    - env:
        <<: *centos_build
        TOXENV: functional_2.5
    - env:
        <<: *debian_build
        TOXENV: functional_2.5
    # ANSIBLE STABLE
    - env:
        <<: *ubuntu_build
    - env:
        <<: *centos_build
    - env:
        <<: *debian_build

before_install:
  # Load cached docker images
  - if [[ -d ${cache_dir} ]]; then ls ${cache_dir}/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
  - if [[ -n ${docker_image_tag} ]]; then docker pull ${docker_image}:${docker_image_tag}; fi
install:
  - pip install tox
before_script:
  - curl -o ${PWD}/tox.ini https://gist.githubusercontent.com/Logan2211/c5f38423b085fbea78392f1ee10700d5/raw/tox.ini
script:
  - tox
before_cache:
  # Save tagged docker images
  - >
    mkdir -p ${cache_dir} && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
    | xargs -n 2 -t sh -c 'test -e ${cache_dir}/$1.tar.gz || docker save $0 | gzip -2 > ${cache_dir}/$1.tar.gz'
notifications:
  email: false
  slack:
    rooms:
      secure: JQFhp5a02z7PAylWncJISi7DDIqbu8B1EewqB6lkiGO8R7wsNbJ+2Ofjw/1ThxL2XGlAnY/QsZu2v389x3ZgGpeGwpnpy0jNgx3OyyxUUagcKGh46/tysOlFTDtbYvMxFEK7fwInfQkBqYE/pe3dSUKc3M8E0wE0D6vhwepNgD55kyHmgrCB8MEvBoVe0sYAKxmg4/UkYaLhNGIv4UwkDJPNx5LW/Cak+ghaRZdfhu91tjUYDkEBYFVvz2XYRNFYnVDdSrQta4VsNArMW/n4y/Gb8h1JHI98MPV+h/+sSLH3z1u0pbOpPR9/xn8oLBnZ6gVrqqAU1UDm1tNZmrLoWHGJz253lz+ftAwJXm4jpzb5bFfMQmNMyh05rY8VStZ6vMuMUY+Vpxc8ASKevTGq4nfTvdLhjKO95Q5CMkYdG21IHva+gc2+ZaRek0efaTCCAFWUp5qSVo0pQAUz5m0/+dSFak+/jd7vjaiCDgua1opOBa2yrKXTQ2CUqTUfUtfkMgDiGKa2OdySbdg02ji4rz6RvHLjJdsQgsFB5jWk0w8ZEiauWj5ViJJJwRl82bKxVR2vFCrhIR6Hk5KOtA94ZlvAltWyb4ykkoG17phXWRfJ7LeHxg0jgxQlN4afEj5g6uytJO4BaLuQ8r3C22cxMnD/F4XCaZCJxhLwsGCZ/Vc=
